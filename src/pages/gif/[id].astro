---
import { Image } from "astro:assets";
import Layout from "../../layouts/Layout.astro";
import { getGifById } from "../../services/getGifs";

const { id } = Astro.params;

if (!id) {
  return Astro.redirect("/");
}

const gif = await getGifById(id);
---

<style>
  .whitespace-normal {
    white-space: normal;
  }
  .break-words {
    word-break: break-word;
  }
</style>

<Layout title="Gif">
  <div class="w-full py-10 px-5 pl-[100px] flex gap-5">
    <div class="flex flex-col gap-6">
      {
        gif ? (
          <>
            <Image
              src={gif.url}
              alt={"image"}
              width={1100}
              height={900}
              class="aspect-video"
            />
            <div class="flex items-center">
              <div class="flex gap-5 items-center">
                <Image
                  src="https://picsum.photos/200"
                  alt="user"
                  width={50}
                  height={50}
                  class="rounded-full w-10 h-10"
                />
                <p class="text-xl">{gif.title.split("GIF")[0] || "No title"}</p>
              </div>
            </div>
          </>
        ) : (
          <div>No video</div>
        )
      }
    </div>
    <div class="w-1/3 p-2 border border-[#272727] rounded-md flex flex-col">
      <div class="grow">
        <div
          class="container-comments flex flex-col gap-3 overflow-y-auto overflow-x-hidden h-full max-h-[640px] whitespace-normal break-words"
        >
        </div>
      </div>
      <form class="flex" id="form-chat">
        <input
          type="text"
          name="comment"
          placeholder="Write a comment..."
          class="w-full p-2 outline-none bg-[#272727] rounded-l"
        />
        <button class="bg-[#272727] rounded-r">Send</button>
      </form>
    </div>
  </div>
</Layout>

<script>
  const commentRepeated: object[] = [];

  const defaultComments = [
    {
      username: "Pepito",
      avatar: `https://picsum.photos/id/${Math.round(Math.random() * 1000)}/200/300`,
      comment: "hola",
    },
    {
      username: "Juan",
      avatar: `https://picsum.photos/id/${Math.round(Math.random() * 1000)}/200/300`,
      comment: "muy buen video",
    },
    {
      username: "Marcos",
      avatar: `https://picsum.photos/id/${Math.round(Math.random() * 1000)}/200/300`,
      comment: "epico",
    },
    {
      username: "Pepito",
      avatar: `https://picsum.photos/id/${Math.round(Math.random() * 1000)}/200/300`,
      comment: "lol",
    },
  ];

  const getCommentsRandom = () => {
    const randomIndex = Math.floor(Math.random() * defaultComments.length);
    const comment = defaultComments[randomIndex];

    if (!commentRepeated.includes(comment)) {
      commentRepeated.push(comment);

      const commentsContainer = document.querySelector(".container-comments");
      if (commentsContainer) {
        const commentHTML = `
        <div class="flex gap-2 items-start">
          <img
            src="${comment.avatar}"
            alt="user"
            width="20"
            height="50"
            class="rounded-full w-7 h-7"
          />
          <div class="whitespace-normal break-words">
            <p class="text-xs">${comment.username}</p>
            <div>
              <p>${comment.comment}</p>
            </div>
          </div>
        </div>
      `;

        commentsContainer.innerHTML += commentHTML;
      }
    }
  };

  setInterval(getCommentsRandom, 3500);

  interface TypeComment {
    username: string;
    comment: string;
    avatar: string;
  }

  const comments: TypeComment[] = [];

  const formChat = document.querySelector("#form-chat");

  if (formChat) {
    formChat.addEventListener("submit", (e: Event) => {
      e.preventDefault();
      const { comment } = Object.fromEntries(
        new window.FormData(e.target as HTMLFormElement)
      );

      comments.push({
        username: "Yo",
        avatar: "https://picsum.photos/200",
        comment: comment as string,
      });

      (formChat as HTMLFormElement).reset();

      const commentsContainer = document.querySelector(".container-comments");
      if (commentsContainer) {
        const newCommentHTML = comments
          .slice(-1)
          .map(({ username, comment, avatar }) => {
            return `
               <div class="flex gap-2 items-start">
                  <img
                    src="${avatar}"
                    alt="user"
                    width="20"
                    height="50"
                    class="rounded-full w-7 h-7"
                  />
                  <div class="whitespace-normal break-words">
                    <p class="text-xs">${username}</p>
                    <div>
                      <p>
                        ${comment}
                      </p>
                    </div>
                  </div>
              </div>
            `;
          })
          .join("");

        commentsContainer.innerHTML += newCommentHTML;
      }
    });
  }
</script>
